class Solution:
    def shipWithinDays(self, weights: List[int], days: int) -> int:
        def mincapacity(capacity):
            total=0
            day=1
            for w in weights:
                total+=w
                if total>capacity:
                    day+=1
                    total=w
            return day<=days
    
        low=max(weights)
        high=sum(weights)
        res=high
        while low<=high:
            mid=(low+high)//2
            if mincapacity(mid):
                res=mid
                high=mid-1
            else:
                low=mid+1
        return res
        
        
#bruteforce
        # def mincapacity(capacity):
        #     total=0
        #     day=1
        #     for w in weights:
        #         total+=w
        #         if total>capacity:
        #             day+=1
        #             total=w
        #     return day<=days
    
        # mincap=max(weights)
        # maxcap=sum(weights)
        # for capacity in range(mincap,maxcap+1):
        #     if mincapacity(capacity):
        #         return capacity
        
