class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        seen=set()
        n=len(s)
        left=0
        max_len=0
        for right in range(n):
            while s[right] in seen:
                seen.remove(s[left])
                left+=1
            seen.add(s[right])
            max_len=max(max_len,right-left+1)
        return max_len







# #Better
#         n = len(s)
#         max_len = 0
    
#         for i in range(n):
#             seen = set()
#             for j in range(i, n):
#                 if s[j] in seen:
#                     break
#                 seen.add(s[j])
#                 max_len = max(max_len, j - i + 1)
    
#         return max_len

#Bruteforce
        # n=len(s)
        # max_len=0
        # for i in range(n):
        #     for j in range(i,n):
        #         substring=s[i:j+1]
        #         if len(set(substring))==len(substring):
        #             max_len=max(max_len,j-i+1)
        # return max_len
        
