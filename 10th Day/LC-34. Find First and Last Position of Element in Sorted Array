class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:
        def find_first(nums, target):
            low, high = 0, len(nums)-1
            first = -1
            while low <= high:
                mid = low + (high-low)//2
                if nums[mid] == target:
                    first = mid
                    high = mid - 1  # search left
                elif nums[mid] < target:
                    low = mid + 1
                else:
                    high = mid - 1
            return first

        def find_last(nums, target):
            low, high = 0, len(nums)-1
            last = -1
            while low <= high:
                mid = low + (high-low)//2
                if nums[mid] == target:
                    last = mid
                    low = mid + 1  # search right
                elif nums[mid] < target:
                    low = mid + 1
                else:
                    high = mid - 1
            return last

        return [find_first(nums, target), find_last(nums, target)]

# #better
#         n=len(nums)
#         first,last=-1,-1
#         for i in range(n):
#             if nums[i]==target:
#                 if first==-1:
#                     first=i
#                 last=i
#         return [first,last]

# #bruteforce
#         n = len(nums)
#         for i in range(n):
#             if nums[i] == target:       # first occurrence
#                 for j in range(n-1, -1, -1):
#                     if nums[j] == target:   # last occurrence
#                         return [i, j]
#         return [-1, -1]
           
