class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:

#optimal
        i,j,k=m-1,n-1,m+n-1
        while i>=0 and j>=0:
            if nums2[j]>=nums1[i]:
                nums1[k]=nums2[j]
                j-=1
            else:
                nums1[k]=nums1[i]
                i-=1
            k-=1
        # Copy remaining nums2 elements
        while j >= 0:
            nums1[k] = nums2[j]
            j -= 1
            k -= 1

        




# #Better
#         res=[]
#         i,j=0,0
#         while i<m and j<n:
#             if nums1[i]<=nums2[j]:
#                 res.append(nums1[i])
#                 i+=1
#             else:
#                 res.append(nums2[j])
#                 j+=1
#         # add leftovers from nums1
#         while i < m:
#             res.append(nums1[i])
#             i += 1

#         # add leftovers from nums2
#         while j < n:
#             res.append(nums2[j])
#             j += 1

#         # copy back into nums1
#         for k in range(m + n):
            # nums1[k] = res[k]


# #Bruteforce
#         res = []
#         for i in range(m):
#             res.append(nums1[i])
#         for j in range(n):
#             res.append(nums2[j])

#         # Step 2: Sort manually (Bubble Sort)
#         size = m + n
#         for i in range(size):
#             for j in range(0, size-i-1):
#                 if res[j] > res[j+1]:
#                     res[j], res[j+1] = res[j+1], res[j]

#         # Step 3: Copy back to nums1
#         for i in range(m+n):
#             nums1[i] = res[i]




        

        
