class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:

        arr = [(nums[i], i) for i in range(len(nums))] 
        arr.sort() 

        left, right = 0, len(arr) - 1

        while left < right:
            curr_sum = arr[left][0] + arr[right][0]
            if curr_sum == target:
                return [arr[left][1], arr[right][1]]  
            elif curr_sum < target:
                left += 1
            else:
                right -= 1





# #Better
#         n=len(nums)
#         hashmap = {}
#         for i in range(n):
#             num=nums[i]
#             diff = target - num
#             if diff in hashmap:
#                 return [hashmap[diff], i]
#             hashmap[num] = i

#         return [-1, -1] 

        
#Bruteforce
        # n=len(nums)
        # for i in range(n):
        #     for j in range(i+1,n):
        #         if nums[i]+nums[j]==target:
        #             return[i,j]
        
